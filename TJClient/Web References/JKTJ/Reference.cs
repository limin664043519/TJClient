//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace TJClient.JKTJ {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ClientDoServiceSoap", Namespace="http://tempuri.org/")]
    public partial class ClientDoService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback downLoadInfoByParmOperationCompleted;
        
        private System.Threading.SendOrPostCallback downLoadInfoByParm_uploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback AppendOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoFileThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback startThreadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUploadLoggerInfosOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ClientDoService() {
            this.Url = global::TJClient.Properties.Settings.Default.TJClient_JKTJ_ClientDoService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event downLoadInfoByParmCompletedEventHandler downLoadInfoByParmCompleted;
        
        /// <remarks/>
        public event downLoadInfoByParm_uploadCompletedEventHandler downLoadInfoByParm_uploadCompleted;
        
        /// <remarks/>
        public event CreateFileCompletedEventHandler CreateFileCompleted;
        
        /// <remarks/>
        public event AppendCompletedEventHandler AppendCompleted;
        
        /// <remarks/>
        public event VerifyCompletedEventHandler VerifyCompleted;
        
        /// <remarks/>
        public event DoFileThreadCompletedEventHandler DoFileThreadCompleted;
        
        /// <remarks/>
        public event startThreadCompletedEventHandler startThreadCompleted;
        
        /// <remarks/>
        public event GetUploadLoggerInfosCompletedEventHandler GetUploadLoggerInfosCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/downLoadInfoByParm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string downLoadInfoByParm(string rndPrefix, string yljgbm, string czList, string dataType) {
            object[] results = this.Invoke("downLoadInfoByParm", new object[] {
                        rndPrefix,
                        yljgbm,
                        czList,
                        dataType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void downLoadInfoByParmAsync(string rndPrefix, string yljgbm, string czList, string dataType) {
            this.downLoadInfoByParmAsync(rndPrefix, yljgbm, czList, dataType, null);
        }
        
        /// <remarks/>
        public void downLoadInfoByParmAsync(string rndPrefix, string yljgbm, string czList, string dataType, object userState) {
            if ((this.downLoadInfoByParmOperationCompleted == null)) {
                this.downLoadInfoByParmOperationCompleted = new System.Threading.SendOrPostCallback(this.OndownLoadInfoByParmOperationCompleted);
            }
            this.InvokeAsync("downLoadInfoByParm", new object[] {
                        rndPrefix,
                        yljgbm,
                        czList,
                        dataType}, this.downLoadInfoByParmOperationCompleted, userState);
        }
        
        private void OndownLoadInfoByParmOperationCompleted(object arg) {
            if ((this.downLoadInfoByParmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.downLoadInfoByParmCompleted(this, new downLoadInfoByParmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/downLoadInfoByParm_upload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string downLoadInfoByParm_upload(string rndPrefix, string yljgbm, string czList, string dataType) {
            object[] results = this.Invoke("downLoadInfoByParm_upload", new object[] {
                        rndPrefix,
                        yljgbm,
                        czList,
                        dataType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void downLoadInfoByParm_uploadAsync(string rndPrefix, string yljgbm, string czList, string dataType) {
            this.downLoadInfoByParm_uploadAsync(rndPrefix, yljgbm, czList, dataType, null);
        }
        
        /// <remarks/>
        public void downLoadInfoByParm_uploadAsync(string rndPrefix, string yljgbm, string czList, string dataType, object userState) {
            if ((this.downLoadInfoByParm_uploadOperationCompleted == null)) {
                this.downLoadInfoByParm_uploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OndownLoadInfoByParm_uploadOperationCompleted);
            }
            this.InvokeAsync("downLoadInfoByParm_upload", new object[] {
                        rndPrefix,
                        yljgbm,
                        czList,
                        dataType}, this.downLoadInfoByParm_uploadOperationCompleted, userState);
        }
        
        private void OndownLoadInfoByParm_uploadOperationCompleted(object arg) {
            if ((this.downLoadInfoByParm_uploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.downLoadInfoByParm_uploadCompleted(this, new downLoadInfoByParm_uploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CreateFile(string fileName) {
            object[] results = this.Invoke("CreateFile", new object[] {
                        fileName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFileAsync(string fileName) {
            this.CreateFileAsync(fileName, null);
        }
        
        /// <remarks/>
        public void CreateFileAsync(string fileName, object userState) {
            if ((this.CreateFileOperationCompleted == null)) {
                this.CreateFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFileOperationCompleted);
            }
            this.InvokeAsync("CreateFile", new object[] {
                        fileName}, this.CreateFileOperationCompleted, userState);
        }
        
        private void OnCreateFileOperationCompleted(object arg) {
            if ((this.CreateFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFileCompleted(this, new CreateFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Append", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Append(string fileName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] buffer) {
            object[] results = this.Invoke("Append", new object[] {
                        fileName,
                        buffer});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AppendAsync(string fileName, byte[] buffer) {
            this.AppendAsync(fileName, buffer, null);
        }
        
        /// <remarks/>
        public void AppendAsync(string fileName, byte[] buffer, object userState) {
            if ((this.AppendOperationCompleted == null)) {
                this.AppendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAppendOperationCompleted);
            }
            this.InvokeAsync("Append", new object[] {
                        fileName,
                        buffer}, this.AppendOperationCompleted, userState);
        }
        
        private void OnAppendOperationCompleted(object arg) {
            if ((this.AppendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AppendCompleted(this, new AppendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Verify", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Verify(string fileName, string md5) {
            object[] results = this.Invoke("Verify", new object[] {
                        fileName,
                        md5});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyAsync(string fileName, string md5) {
            this.VerifyAsync(fileName, md5, null);
        }
        
        /// <remarks/>
        public void VerifyAsync(string fileName, string md5, object userState) {
            if ((this.VerifyOperationCompleted == null)) {
                this.VerifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyOperationCompleted);
            }
            this.InvokeAsync("Verify", new object[] {
                        fileName,
                        md5}, this.VerifyOperationCompleted, userState);
        }
        
        private void OnVerifyOperationCompleted(object arg) {
            if ((this.VerifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyCompleted(this, new VerifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DoFileThread", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DoFileThread(string clientUser, string GuidStr, string yljgbm) {
            object[] results = this.Invoke("DoFileThread", new object[] {
                        clientUser,
                        GuidStr,
                        yljgbm});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DoFileThreadAsync(string clientUser, string GuidStr, string yljgbm) {
            this.DoFileThreadAsync(clientUser, GuidStr, yljgbm, null);
        }
        
        /// <remarks/>
        public void DoFileThreadAsync(string clientUser, string GuidStr, string yljgbm, object userState) {
            if ((this.DoFileThreadOperationCompleted == null)) {
                this.DoFileThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoFileThreadOperationCompleted);
            }
            this.InvokeAsync("DoFileThread", new object[] {
                        clientUser,
                        GuidStr,
                        yljgbm}, this.DoFileThreadOperationCompleted, userState);
        }
        
        private void OnDoFileThreadOperationCompleted(object arg) {
            if ((this.DoFileThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoFileThreadCompleted(this, new DoFileThreadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/startThread", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void startThread(string clientUser, string GuidStr, string yljgbm) {
            this.Invoke("startThread", new object[] {
                        clientUser,
                        GuidStr,
                        yljgbm});
        }
        
        /// <remarks/>
        public void startThreadAsync(string clientUser, string GuidStr, string yljgbm) {
            this.startThreadAsync(clientUser, GuidStr, yljgbm, null);
        }
        
        /// <remarks/>
        public void startThreadAsync(string clientUser, string GuidStr, string yljgbm, object userState) {
            if ((this.startThreadOperationCompleted == null)) {
                this.startThreadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartThreadOperationCompleted);
            }
            this.InvokeAsync("startThread", new object[] {
                        clientUser,
                        GuidStr,
                        yljgbm}, this.startThreadOperationCompleted, userState);
        }
        
        private void OnstartThreadOperationCompleted(object arg) {
            if ((this.startThreadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startThreadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUploadLoggerInfos", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LoggerInfo[] GetUploadLoggerInfos(string czy) {
            object[] results = this.Invoke("GetUploadLoggerInfos", new object[] {
                        czy});
            return ((LoggerInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUploadLoggerInfosAsync(string czy) {
            this.GetUploadLoggerInfosAsync(czy, null);
        }
        
        /// <remarks/>
        public void GetUploadLoggerInfosAsync(string czy, object userState) {
            if ((this.GetUploadLoggerInfosOperationCompleted == null)) {
                this.GetUploadLoggerInfosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUploadLoggerInfosOperationCompleted);
            }
            this.InvokeAsync("GetUploadLoggerInfos", new object[] {
                        czy}, this.GetUploadLoggerInfosOperationCompleted, userState);
        }
        
        private void OnGetUploadLoggerInfosOperationCompleted(object arg) {
            if ((this.GetUploadLoggerInfosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUploadLoggerInfosCompleted(this, new GetUploadLoggerInfosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class LoggerInfo {
        
        private string tableNameField;
        
        private string ipField;
        
        private string czyField;
        
        private string infoField;
        
        private string gUIDField;
        
        private int statusField;
        
        private string createDateField;
        
        /// <remarks/>
        public string TableName {
            get {
                return this.tableNameField;
            }
            set {
                this.tableNameField = value;
            }
        }
        
        /// <remarks/>
        public string IP {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
            }
        }
        
        /// <remarks/>
        public string Czy {
            get {
                return this.czyField;
            }
            set {
                this.czyField = value;
            }
        }
        
        /// <remarks/>
        public string Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        public string GUID {
            get {
                return this.gUIDField;
            }
            set {
                this.gUIDField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void downLoadInfoByParmCompletedEventHandler(object sender, downLoadInfoByParmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class downLoadInfoByParmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal downLoadInfoByParmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void downLoadInfoByParm_uploadCompletedEventHandler(object sender, downLoadInfoByParm_uploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class downLoadInfoByParm_uploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal downLoadInfoByParm_uploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CreateFileCompletedEventHandler(object sender, CreateFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void AppendCompletedEventHandler(object sender, AppendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AppendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AppendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void VerifyCompletedEventHandler(object sender, VerifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DoFileThreadCompletedEventHandler(object sender, DoFileThreadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoFileThreadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoFileThreadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void startThreadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetUploadLoggerInfosCompletedEventHandler(object sender, GetUploadLoggerInfosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUploadLoggerInfosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUploadLoggerInfosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LoggerInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoggerInfo[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591